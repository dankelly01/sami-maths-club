name: Build IOS
on:
  push:
    branches:
      - ios
jobs:
  ios:
    name: Build IOS
    runs-on: macOS-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      # - name: Setup Cache
      #   uses: actions/cache@v2
      #   with:
      #     path: "**/node_modules"
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      # - name: Install Dependencies
      #   run: yarn install
      # - name: Build App
      #   run: npm run app:build
      - name: Setup environment
      # TODO - look at other signing options, e.g. https://medium.com/well-red/github-actions-fastlane-ios-1f6d43cce726
        run: |
          echo $P12_BASE64 | base64 --decode > ios-build.p12
          echo $MOBILEPROVISION_BASE64 | base64 --decode > ios-build.mobileprovision
          ls
        env:
          $P12_BASE64: ${{secrets.IOS_P12_BASE64}}
          $MOBILEPROVISION_BASE64: ${{secrets.IOS_PROVISION_BASE64}}
      - name: Install and run fastlane
        run: |
          cd maths-club-app/ios/App
          sudo gem install fastlane -NV
          fastlane ci
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./maths-club-app/ios/App/build.ipa
          asset_name: build.ipa
          asset_content_type: application/zip
